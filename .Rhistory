options(scipen = 999)
packages <- c("tidyr",  "magrittr", "tidyverse", "reshape2", "splitstackshape","doBy","WriteXLS","Rcpp",
"ggplot2","dplyr","rlist","fitdistrplus","MASS","psych","rgl","copula","VineCopula","scales",
"univariateML","logspline","readr","data.table","conflicted", "readxl", "writexl", "fs",
"purrr", "readr", "here","plyr" , "furrr", "profvis", "future", "magrittr", "feather", "RStata", "haven")
# Install only those not already installed
installed <- packages %in% rownames(installed.packages())
if (any(!installed)) {
install.packages(packages[!installed])
}
lapply(packages, library, character.only = TRUE)
library(plyr)
library(dplyr)
conflicts_prefer(here::here)
conflicts_prefer(dplyr::filter)
conflicts_prefer(dplyr::select)
conflicts_prefer(dplyr::mutate)
conflicts_prefer(dplyr::rename)
conflicts_prefer(dplyr::summarize)
conflicts_prefer(dplyr::summarise)
conflicts_prefer(dplyr::count)
output<-read_csv("E:/Lou's projects/flukeRDM/flukeRDM_iterative_datatest_output1.csv")
output<-read_csv("E:/Lou's projects/flukeRDM/flukeRDM_iterative_data/test_output1.csv")
output<-read_csv("E:/Lou's projects/flukeRDM/flukeRDM_iterative_data/test_output1.csv", show_col_types = FALSE)
wts<-read_excel("C:/Users/andrew.carr-harris/Desktop/MRIP_data_2025/SQ_weight_per_catch.xlsx")
wts<-read_excel("C:/Users/andrew.carr-harris/Desktop/MRIP_data_2025/SQ_weight_per_catch.xlsx")
output<-read_csv("E:/Lou's projects/flukeRDM/flukeRDM_iterative_data/test_output1.csv", show_col_types = FALSE)
View(wts)
View(output)
output<-output %>%
dplyr::filter(metric %in% c(keep_numbers, release_numbers, discmort_number))
output<-output %>%
dplyr::filter(metric %in% c("keep_numbers", "release_numbers", "discmort_number"))
wts<-read_excel("C:/Users/andrew.carr-harris/Desktop/MRIP_data_2025/SQ_weight_per_catch.xlsx")
output<-read_csv("E:/Lou's projects/flukeRDM/flukeRDM_iterative_data/test_output1.csv", show_col_types = FALSE)
output<-output %>%
dplyr::filter(metric %in% c("keep_numbers", "release_numbers", "discmort_number")) %>%
dplyr::filter(mode !="all modes")
wts<-read_excel("C:/Users/andrew.carr-harris/Desktop/MRIP_data_2025/SQ_weight_per_catch.xlsx")
output<-read_csv("E:/Lou's projects/flukeRDM/flukeRDM_iterative_data/test_output1.csv", show_col_types = FALSE)
output<-output %>%
dplyr::filter(metric %in% c("keep_numbers", "release_numbers", "discmort_number")) %>%
dplyr::filter(mode !="all modes") %>%
dplyr::left_join(wts, by=c(species, mode, state))
output<-read_csv("E:/Lou's projects/flukeRDM/flukeRDM_iterative_data/test_output1.csv", show_col_types = FALSE)
output<-output %>%
dplyr::filter(metric %in% c("keep_numbers", "release_numbers", "discmort_number")) %>%
dplyr::filter(mode !="all modes") %>%
dplyr::left_join(wts, by=c("species", "mode", "state"))
output<-read_csv("E:/Lou's projects/flukeRDM/flukeRDM_iterative_data/test_output1.csv", show_col_types = FALSE)
output<-output %>%
dplyr::filter(metric %in% c("keep_numbers", "release_numbers", "discmort_number")) %>%
dplyr::filter(mode !="all modes")
output<-read_csv("E:/Lou's projects/flukeRDM/flukeRDM_iterative_data/test_output1.csv", show_col_types = FALSE)
output<-output %>%
dplyr::filter(metric %in% c("keep_numbers", "release_numbers", "discmort_number")) %>%
dplyr::filter(mode !="all modes") %>%
dplyr::left_join(wts, by=c("species", "mode", "state"))
output<-read_csv("E:/Lou's projects/flukeRDM/flukeRDM_iterative_data/test_output1.csv", show_col_types = FALSE)
output<-output %>%
dplyr::filter(metric %in% c("keep_numbers", "release_numbers", "discmort_number")) %>%
dplyr::filter(mode !="all modes")
output<-read_csv("E:/Lou's projects/flukeRDM/flukeRDM_iterative_data/test_output1.csv", show_col_types = FALSE)
output<-output %>%
dplyr::filter(metric %in% c("keep_numbers", "release_numbers", "discmort_number")) %>%
dplyr::filter(mode !="all modes") %>%
dplyr::left_join(wts, by=c("species", "mode", "state"))
head(output)
output <- output %>%
mutate(
keep_weightavg = case_when(
metric == "keep_numbers"    ~ avg_wt_harv * value,
TRUE ~ NA_real_
),
release_weightavg = case_when(
metric == "release_numbers" ~ avg_wt_rel * value,
TRUE ~ NA_real_
),
discmort_weightavg = case_when(
metric == "discmort_number" ~ avg_wt_rel * value,
TRUE ~ NA_real_
)
)
output <- output %>%
mutate(
keep_weightavg     = ifelse(is.na(keep_weightavg), 0, keep_weightavg),
release_weightavg  = ifelse(is.na(release_weightavg), 0, release_weightavg),
discmort_weightavg = ifelse(is.na(discmort_weightavg), 0, discmort_weightavg)
)
output_long <- output %>%
select(-metric, -avg_wt_harv, -avg_wt_rel) %>%
pivot_longer(
cols = c(keep_weightavg, release_weightavg, discmort_weightavg),
names_to = "metric",
values_to = "value"
)
output_long <- output %>%
dplyr::select(-metric, -avg_wt_harv, -avg_wt_rel, -value) %>%
dplyr::pivot_longer(
cols = c(keep_weightavg, release_weightavg, discmort_weightavg),
names_to = "metric",
values_to = "value"
)
output_long <- output %>%
dplyr::select(-metric, -avg_wt_harv, -avg_wt_rel, -value) %>%
plyr::pivot_longer(
cols = c(keep_weightavg, release_weightavg, discmort_weightavg),
names_to = "metric",
values_to = "value"
)
output_long <- output %>%
dplyr::select(-metric, -avg_wt_harv, -avg_wt_rel, -value) %>%
tidyr::pivot_longer(
cols = c(keep_weightavg, release_weightavg, discmort_weightavg),
names_to = "metric",
values_to = "value"
)
View(output_long)
# Transfer projected catch draw files from .dta to .feather
statez <- c("MA", "RI", "CT", "NY", "NJ", "DE", "MD", "VA", "NC")
for(s in statez) {
for(i in 1:100) {
catch<-read_dta(file.path(iterative_input_data_cd, paste0("proj_catch_draws_",s, "_", i,".dta")))
write_feather(catch, file.path(iterative_input_data_cd, paste0("proj_catch_draws_",s, "_", i,".feather")))
}
}
options(scipen = 999)
packages <- c("tidyr",  "magrittr", "tidyverse", "reshape2", "splitstackshape","doBy","WriteXLS","Rcpp",
"ggplot2","dplyr","rlist","fitdistrplus","MASS","psych","rgl","copula","VineCopula","scales",
"univariateML","logspline","readr","data.table","conflicted", "readxl", "writexl", "fs",
"purrr", "readr", "here","plyr" , "furrr", "profvis", "future", "magrittr", "feather", "RStata", "haven")
# Install only those not already installed
installed <- packages %in% rownames(installed.packages())
if (any(!installed)) {
install.packages(packages[!installed])
}
lapply(packages, library, character.only = TRUE)
library(plyr)
library(dplyr)
conflicts_prefer(here::here)
conflicts_prefer(dplyr::filter)
conflicts_prefer(dplyr::select)
conflicts_prefer(dplyr::mutate)
conflicts_prefer(dplyr::rename)
conflicts_prefer(dplyr::summarize)
conflicts_prefer(dplyr::summarise)
conflicts_prefer(dplyr::count)
#There are four folders needed::
#input data - contains all the MRIP, biological data, angler characteristics data, as well as some data generated in the simulation
#code - contains all the model code
#output_data - this folder is empty to begin with. It stores final simulation output
#iterative_data -this folder is empty to begin with. It compiles data generated in the simulation
#Need to ensure that the globals below are set up in both this file and the stata model_wrapper.do file.
#Set up R globals for input/output data and code scripts
code_cd=here("Code", "sim")
input_data_cd="C:/Users/andrew.carr-harris/Desktop/MRIP_data_2025"
iterative_input_data_cd="E:/Lou's projects/flukeRDM/flukeRDM_iterative_data"
###################################################
###############Pre-sim Stata code##################
###################################################
#Stata code extracts and prepares the data needed for the simulation
#Connect Rstudio to Stata
#options("RStata.StataPath" = "\"C:\\Program Files\\Stata17\\StataMP-64\"")
#options("RStata.StataVersion" = 17)
# Transfer projected catch draw files from .dta to .feather
statez <- c("MA", "RI", "CT", "NY", "NJ", "DE", "MD", "VA", "NC")
for(s in statez) {
for(i in 1:100) {
catch<-read_dta(file.path(iterative_input_data_cd, paste0("proj_catch_draws_",s, "_", i,".dta")))
write_feather(catch, file.path(iterative_input_data_cd, paste0("proj_catch_draws_",s, "_", i,".feather")))
}
}
